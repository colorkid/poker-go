{"version":3,"sources":["api/websocketApi.ts","Components/InputNameField/InputNameField.tsx","selectors/boardSelecors.ts","Components/InputNameField/InputNameFieldContainer.tsx","Components/Player/Player.tsx","Components/User/User.tsx","Constants/userConstants.ts","Redux/actions/userActions.ts","selectors/userSelectors.ts","Components/User/UserContainer.tsx","Components/Colleagues/Colleagues.tsx","Components/PokerTable/PokerTable.tsx","Components/Cards/Constants.ts","Components/Cards/Cards.tsx","Components/Cards/CardsContainer.tsx","Components/OpenCardButton/OpenCardButton.tsx","Components/OpenCardButton/OpenCardButtonContainer.tsx","Components/ClearEstimations/ClearEstimations.tsx","Components/ClearEstimations/ClearEstimationsContainer.tsx","Components/PokerBoard/PokerBoard.tsx","Components/PokerBoard/PokerBoardContainer.tsx","Constants/boardConstants.ts","Redux/actions/boardActions.ts","App.tsx","Redux/thunkSubscribers.ts","theme.tsx","Constants/ChatConstants.ts","Redux/reducers/chatReducer.ts","Redux/reducers/boardReducer.ts","Redux/reducers/UserReducer.ts","Redux/reducers/rootReducer.ts","index.tsx"],"names":["clientStomp","useStyles","makeStyles","container","width","fontSize","skeleton","transform","InputNameField","setNameStory","nameStory","subscribedState","useState","title","setTitle","styles","useEffect","className","TextField","value","label","variant","hiddenLabel","onChange","e","target","onBlur","onKeyPress","key","preventDefault","Skeleton","height","StompJs","webSocketFactory","SockJS","activate","ApiWebsocket","onSubscribe","getState","getNameStory","setSubscribedState","pushUserName","removeUser","votedUser","showCard","newGame","onConnect","subscribe","message","JSON","parse","body","userName","name","user","sendUserNameMeToo","userState","userNameScore","score","number","publish","destination","stringify","sendTaskName","data","sendUserName","vote","openCards","clearEstimations","state","board","getSubscribedState","subscribed","InputNameFieldContainer","useSelector","player","display","flexDirection","alignItems","wordBreak","marginRight","marginLeft","alignSelf","paddingTop","backgroundColor","borderRadius","transition","justifyContent","fontWeight","textAlign","lineHeight","minHeight","voted","border","color","Player","onDoubleClickHandler","isVoted","onDoubleClick","inputName","minWidth","maxWidth","marginTop","User","setName","votedUsers","scores","login","setLogin","length","includes","find","item","autoFocus","SET_NAME","PUSH_USER_NAME","REMOVE_USER","VOTED_USER","SHOW_CARD","SET_NUMBER","RE_VOTE","NEW_GAME","pushUserNameA","type","payload","removeUserA","votedUserA","showCardA","getUserNameSelector","getUsers","colleagues","filter","getVotedUsersSelector","votedColleagues","getScoresSelector","getEstimationSelector","UserContainer","dispatch","useDispatch","subscribeOnSendLeaveMessage","window","addEventListener","Colleagues","colleaguesNames","map","position","table","PokerTable","NUMBERS","cardsWrapper","flexWrap","card","cursor","cardActive","Cards","setEstimation","estimation","Numbers","useMemo","onClick","handleClick","CardsContainer","estimationR","estimationLocal","setEstimationLocal","reVote","reVoteA","setOwnEstimation","Number","isInteger","button","padding","buttonDisabled","pointerEvents","opacity","OpenCard","sayShowCards","disabledButton","OpenCardContainer","ClearEstimations","ClearEstimationsContainer","header","middle","footer","buttons","PokerBoard","PokerBoardContainer","GET_NAME_STORY","SET_SUBSCRIBE_STATE","root","App","a","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","GET_MESSAGE","initialState","allMessages","pushScores","croppedArr","pushUser","pushVotedUser","rootReducer","combineReducers","chat","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.23c53b2e.chunk.js","sourcesContent":["import SockJS from \"sockjs-client\";\r\nimport * as StompJs from \"@stomp/stompjs\";\r\nimport {IMessage} from \"@stomp/stompjs\";\r\nimport {INameStory} from \"../Interfaces\";\r\nimport {IGetName} from \"../Redux/reducers/UserReducer\";\r\nimport {IVote} from \"../Components/Cards/CardsContainer\";\r\n\r\nexport let clientStomp: StompJs.Client;\r\nclientStomp = new StompJs.Client();\r\n// @ts-ignore\r\nclientStomp.webSocketFactory = () => new SockJS('https://poker-api.r2ls.ru/ws');\r\nclientStomp.activate();\r\n\r\nexport const ApiWebsocket: any = {\r\n    onSubscribe: (\r\n        getState: any,\r\n        getNameStory: any,\r\n        setSubscribedState: any,\r\n        pushUserName: any,\r\n        removeUser: any,\r\n        votedUser: any,\r\n        showCard: any,\r\n        newGame: any,\r\n    ) => {\r\n        clientStomp.onConnect = () => {\r\n            setSubscribedState()\r\n            clientStomp.subscribe('/topic/room/topic-changed', (message: IMessage) => {\r\n                getNameStory(JSON.parse(message.body))\r\n                newGame()\r\n            });\r\n            clientStomp.subscribe('/topic/room/im-here', () => {\r\n                const userName = {\r\n                    name: getState().user.name\r\n                };\r\n                ApiWebsocket.sendUserNameMeToo(userName)\r\n            });\r\n            clientStomp.subscribe('/topic/room/im-here-too', (message: IMessage) => {\r\n                pushUserName(JSON.parse(message.body))\r\n            });\r\n            clientStomp.subscribe('/topic/room/i-left', (message: IMessage) => {\r\n                removeUser(JSON.parse(message.body))\r\n            });\r\n            clientStomp.subscribe('/topic/room/i-voted', (message: IMessage) => {\r\n                votedUser(JSON.parse(message.body))\r\n            });\r\n            clientStomp.subscribe('/topic/room/open-cards', () => {\r\n                const userState = getState().user;\r\n                const userNameScore = {\r\n                    name: userState.name,\r\n                    score: userState.number\r\n                };\r\n                clientStomp.publish({destination: '/app/room/my-score', body: JSON.stringify(userNameScore)});\r\n            });\r\n            clientStomp.subscribe('/topic/room/my-score', (message: IMessage) => {\r\n                showCard(JSON.parse(message.body))\r\n            });\r\n            clientStomp.subscribe('/topic/room/re-vote', (message: IMessage) => {\r\n                newGame()\r\n            });\r\n        }\r\n    },\r\n    sendTaskName: (data: INameStory) => {\r\n        clientStomp.publish({destination: '/app/room/topic-changed', body: JSON.stringify(data)});\r\n    },\r\n    sendUserName: (data: IGetName) => {\r\n        clientStomp.publish({destination: '/app/room/im-here', body: JSON.stringify(data)});\r\n    },\r\n    sendUserNameMeToo: (data: IGetName) => {\r\n        clientStomp.publish({destination: '/app/room/im-here-too', body: JSON.stringify(data)});\r\n    },\r\n    removeUser: (data: IGetName) => {\r\n        clientStomp.publish({destination: '/app/room/i-left', body: JSON.stringify(data)});\r\n    },\r\n    vote: (data: IVote) => {\r\n        clientStomp.publish({destination: '/app/room/i-voted', body: JSON.stringify(data)});\r\n    },\r\n    openCards: (data: any) => {\r\n        clientStomp.publish({destination: '/app/room/open-cards', body: JSON.stringify(data)});\r\n    },\r\n    clearEstimations: (data: any) => {\r\n        clientStomp.publish({destination: '/app/room/re-vote', body: JSON.stringify(data)});\r\n    },\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Skeleton} from '@material-ui/core';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {INameField} from \"../../Interfaces\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        width: '100%',\r\n\r\n        '& .MuiInput-input': {\r\n            fontSize: 28,\r\n            width: 768,\r\n        }\r\n    },\r\n    skeleton: {\r\n        transform: 'none'\r\n    }\r\n});\r\n\r\nconst InputNameField: FC<INameField> = ({setNameStory, nameStory, subscribedState}) => {\r\n    const [title, setTitle] = useState('');\r\n    const styles = useStyles();\r\n\r\n    useEffect(() => {\r\n        setTitle(nameStory)\r\n    }, [nameStory])\r\n\r\n    const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const onBlurHandler = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setNameStory(e.target.value)\r\n    }\r\n\r\n    const handleKeyPress = (e: any) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            setNameStory(e.target.value)\r\n        }\r\n    }\r\n\r\n    return <div className={styles.container}>\r\n        {subscribedState\r\n            ? <TextField\r\n                value={title}\r\n                label=\"Name of story\"\r\n                variant=\"standard\"\r\n                hiddenLabel={true}\r\n                onChange={onChangeHandler}\r\n                onBlur={onBlurHandler}\r\n                onKeyPress={handleKeyPress}\r\n            />\r\n            : <Skeleton width={294} height={65} className={styles.skeleton} />}</div>\r\n}\r\n\r\nexport default InputNameField;","// import {createSelector} from \"reselect\";\r\nimport {IBoardTitleState, ISubscribedState} from \"../Interfaces\";\r\n\r\nexport const getNameStory = (state: IBoardTitleState) => state.board.title\r\nexport const getSubscribedState = (state: ISubscribedState) => state.board.subscribed\r\n\r\n","import React, {FC} from \"react\";\r\nimport InputNameField from \"./InputNameField\";\r\nimport {ApiWebsocket} from \"../../api/websocketApi\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getNameStory, getSubscribedState} from \"../../selectors/boardSelecors\";\r\nimport {INameStory} from \"../../Interfaces\";\r\n\r\nconst InputNameFieldContainer:FC = () => {\r\n    const nameStory: string = useSelector(getNameStory)\r\n    const subscribedState: boolean = useSelector(getSubscribedState)\r\n\r\n    const setNameStory = (message: string) => {\r\n        const nameStory: INameStory  = {\r\n            title: message,\r\n        }\r\n\r\n        ApiWebsocket.sendTaskName(nameStory)\r\n    }\r\n\r\n    return <InputNameField setNameStory={setNameStory} nameStory={nameStory} subscribedState={subscribedState} />\r\n}\r\n\r\nexport default InputNameFieldContainer;","import React, {FC} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    player: {\r\n        display: 'flex',\r\n        width: 125,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        wordBreak: 'break-word',\r\n        marginRight: -22.5,\r\n        marginLeft: -22.5,\r\n\r\n        '&:nth-child(odd)': {\r\n            alignSelf: 'flex-end',\r\n        },\r\n        '&:nth-child(even)': {\r\n            alignSelf: 'flex-start',\r\n            paddingTop: 5,\r\n        }\r\n    },\r\n    body: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.11)',\r\n        width: 35,\r\n        height: 65,\r\n        borderRadius: 4,\r\n        transition: '0.2s',\r\n        display: \"flex\",\r\n        justifyContent: 'center',\r\n        alignItems: \"center\",\r\n    },\r\n    name: {\r\n        fontSize: 18,\r\n        fontWeight: 600,\r\n        paddingTop: 8,\r\n        textAlign: 'center',\r\n        lineHeight: 1.3,\r\n        minHeight: 54,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    voted: {\r\n        backgroundColor: '#115293'\r\n    },\r\n    number: {\r\n        border: '2px solid #1976d2',\r\n        borderRadius: 4,\r\n        color: \"#1976d2\",\r\n        fontWeight: \"bold\",\r\n        backgroundColor: '#fff',\r\n    }\r\n});\r\n\r\nexport interface IPlayer {\r\n    onDoubleClickHandler?: () => void,\r\n    name: string,\r\n    isVoted?: boolean,\r\n    number?: number,\r\n}\r\n\r\nconst Player: FC<IPlayer> = ({name, onDoubleClickHandler, isVoted, number}) => {\r\n    const styles = useStyles();\r\n\r\n    return <div className={styles.player}>\r\n        <div\r\n            className={`${styles.body} ${isVoted ? styles.voted : ''} ${number || number === 0 ? styles.number : ''}`}>{number === -1 ? '?' : number}</div>\r\n        <div\r\n            className={styles.name}\r\n            onDoubleClick={onDoubleClickHandler}>\r\n            {name}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Player;\r\n","import React, {FC, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {IUser} from \"./UserContainer\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {ApiWebsocket} from \"../../api/websocketApi\";\r\nimport Player from \"../Player\";\r\n\r\nconst useStyles = makeStyles({\r\n    inputName: {\r\n        minWidth: 70,\r\n        maxWidth: 125,\r\n        marginTop: 12\r\n    }\r\n});\r\n\r\nconst User: FC<IUser> = ({name, setName, votedUsers, scores}) => {\r\n    const [login, setLogin] = useState('');\r\n    const styles = useStyles();\r\n\r\n    const onChangeMessageHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setLogin(e.target.value)\r\n    }\r\n\r\n    const onBlurHandler = () => {\r\n        setName(login)\r\n    }\r\n\r\n    const onDoubleClickHandler = () => {\r\n        if (name.length) {\r\n            ApiWebsocket.removeUser({name: name})\r\n        }\r\n        setLogin(name)\r\n        setName('')\r\n    }\r\n\r\n    const handleKeyPress = (e: React.KeyboardEvent) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            setName(login)\r\n        }\r\n    }\r\n\r\n    return <>\r\n        {name\r\n            ? <Player\r\n                name={name}\r\n                onDoubleClickHandler={onDoubleClickHandler}\r\n                isVoted={votedUsers?.includes(name)}\r\n                number={scores?.find(item => item.name === name)?.score}\r\n            />\r\n            : <TextField\r\n                className={styles.inputName}\r\n                label=\"Your name\"\r\n                variant=\"standard\"\r\n                value={login}\r\n                onChange={onChangeMessageHandler}\r\n                onBlur={onBlurHandler}\r\n                onKeyPress={handleKeyPress}\r\n                autoFocus\r\n            />\r\n        }\r\n    </>\r\n}\r\n\r\nexport default User;","export const SET_NAME = 'SET_NAME';\r\nexport const PUSH_USER_NAME = 'PUSH_USER_NAME';\r\nexport const REMOVE_USER = 'REMOVE_USER';\r\nexport const VOTED_USER = 'VOTED_USER';\r\nexport const SHOW_CARD = 'SHOW_CARD';\r\nexport const SET_NUMBER = 'SET_NUMBER';\r\nexport const RE_VOTE = 'RE_VOTE';\r\nexport const NEW_GAME = 'NEW_GAME';","import {IGetName, IUserVoted} from \"../reducers/UserReducer\";\r\nimport {\r\n    SET_NAME,\r\n    PUSH_USER_NAME,\r\n    REMOVE_USER,\r\n    VOTED_USER,\r\n    SHOW_CARD,\r\n    SET_NUMBER,\r\n    RE_VOTE,\r\n    NEW_GAME,\r\n} from \"../../Constants/userConstants\";\r\n\r\nexport const setUserNameA = (data: IGetName) => ({\r\n    type: SET_NAME,\r\n    payload: data\r\n});\r\n\r\nexport const pushUserNameA = (data: IGetName) => ({\r\n    type: PUSH_USER_NAME,\r\n    payload: data\r\n});\r\n\r\nexport const removeUserA = (data: IGetName) => ({\r\n    type: REMOVE_USER,\r\n    payload: data\r\n});\r\n\r\nexport const votedUserA = (data: IUserVoted) => ({\r\n    type: VOTED_USER,\r\n    payload: data\r\n});\r\n\r\nexport const showCardA = (data: any) => ({\r\n    type: SHOW_CARD,\r\n    payload: data\r\n});\r\n\r\nexport const setNumberA = (data: string | null) => ({\r\n    type: SET_NUMBER,\r\n    payload: data\r\n});\r\n\r\nexport const reVoteA = (data: IUserVoted) => ({\r\n    type: RE_VOTE,\r\n    payload: data\r\n});\r\n\r\nexport const newGameA = () => ({\r\n    type: NEW_GAME,\r\n});","import {IUserReducer} from \"../Redux/reducers/UserReducer\";\r\n\r\nexport const getUserNameSelector = (state: IUserReducer) => state.user.name\r\nexport const getUsers = (state: IUserReducer) => state.user.colleagues.filter(item => item.length > 0)\r\nexport const getVotedUsersSelector = (state: IUserReducer) => state.user.votedColleagues\r\nexport const getScoresSelector = (state: IUserReducer) => state.user.scores\r\nexport const getEstimationSelector = (state: IUserReducer) => state.user.number","import React, {FC, useEffect, useState} from \"react\";\r\nimport User from \"./User\";\r\nimport {ApiWebsocket} from \"../../api/websocketApi\";\r\nimport {IGetName, IScores} from \"../../Redux/reducers/UserReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setUserNameA} from \"../../Redux/actions/userActions\";\r\nimport {getScoresSelector, getUserNameSelector, getVotedUsersSelector} from \"../../selectors/userSelectors\";\r\nimport {getSubscribedState} from \"../../selectors/boardSelecors\";\r\nimport {Skeleton} from \"@material-ui/core\";\r\n\r\nexport interface IUser {\r\n    setName: Function,\r\n    name: string,\r\n    votedUsers?: string[],\r\n    scores?: IScores[],\r\n}\r\n\r\nconst UserContainer: FC = () => {\r\n    const userName: string = useSelector(getUserNameSelector);\r\n    const votedUsers: string[] = useSelector(getVotedUsersSelector);\r\n    const scores: IScores[] = useSelector(getScoresSelector);\r\n    const subscribedState: boolean = useSelector(getSubscribedState);\r\n    const [name, setName] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setName(userName)\r\n    }, [userName])\r\n\r\n    useEffect(() => {\r\n        if (name.length) {\r\n            sendUserName();\r\n            subscribeOnSendLeaveMessage();\r\n        }\r\n    }, [name])\r\n\r\n    const sendUserName = () => {\r\n        const userNameToSend: IGetName = {\r\n            name\r\n        }\r\n        dispatch(setUserNameA(userNameToSend))\r\n        ApiWebsocket.sendUserName({name: name})\r\n    }\r\n\r\n    const subscribeOnSendLeaveMessage = () => {\r\n        window.addEventListener(\"beforeunload\", (e) => {\r\n            e.preventDefault();\r\n            return ApiWebsocket.removeUser({name: name})\r\n        });\r\n    }\r\n\r\n    return <>{subscribedState\r\n        ? <User name={name} setName={setName} votedUsers={votedUsers} scores={scores} />\r\n        : <Skeleton width={125} height={48} />\r\n    }</>\r\n}\r\n\r\nexport default UserContainer;","import React, {FC} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getScoresSelector, getUserNameSelector, getUsers, getVotedUsersSelector} from \"../../selectors/userSelectors\";\r\nimport Player from \"../Player\";\r\nimport {IScores} from \"../../Redux/reducers/UserReducer\";\r\n\r\nconst Colleagues: FC = () => {\r\n    const colleaguesNames: string[] = useSelector(getUsers);\r\n    const userName: string = useSelector(getUserNameSelector);\r\n    const votedUsers: string[] = useSelector(getVotedUsersSelector);\r\n    const scores: IScores[] = useSelector(getScoresSelector);\r\n\r\n    return <>\r\n        {colleaguesNames.map((name: string) => {\r\n            return userName !== name && <Player\r\n                name={name}\r\n                key={name}\r\n                isVoted={votedUsers.includes(name)}\r\n                number={scores?.find(item => item.name === name)?.score}\r\n            />\r\n        })}\r\n    </>\r\n}\r\n\r\nexport default Colleagues;","import React, {FC} from \"react\";\r\nimport User from \"../User/UserContainer\";\r\nimport Colleagues from \"../Colleagues/Colleagues\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: \"center\",\r\n        position: 'relative',\r\n        height: 425,\r\n    },\r\n    table: {\r\n        position: 'absolute',\r\n        width: 'calc(100% + 80px)',\r\n        height: 150,\r\n        display: 'block',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.11)',\r\n        borderRadius: 25,\r\n        marginLeft: -40\r\n    }\r\n});\r\n\r\nconst PokerTable:FC = () => {\r\n    const styles = useStyles();\r\n\r\n    return <div className={styles.container}>\r\n        <div className={styles.table}/>\r\n        <User />\r\n        <Colleagues />\r\n    </div>\r\n}\r\n\r\nexport default PokerTable;","export const NUMBERS: number[] = [0,1,2,3,5,8,13,21,34,55,89,-1]","import React, {FC, useMemo, useState} from \"react\";\r\nimport {NUMBERS} from \"./Constants\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    cardsWrapper: {\r\n        display: 'flex',\r\n        justifyContent: \"space-between\",\r\n        flexWrap: \"wrap\",\r\n        width: \"100%\",\r\n        maxWidth: 725,\r\n    },\r\n    card: {\r\n        width: 50,\r\n        height: 80,\r\n        display: 'flex',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        border: '2px solid #1976d2',\r\n        borderRadius: 4,\r\n        color: \"#1976d2\",\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        cursor: \"pointer\",\r\n        transition: '0.2s',\r\n\r\n        \"&:hover\": {\r\n            transform: \"translate(0, -4px)\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.04)\",\r\n        }\r\n    },\r\n    title: {\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n        fontWeight: 300,\r\n    },\r\n    cardActive: {\r\n        transform: \"translate(0, -4px)\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.04)\",\r\n    }\r\n});\r\n\r\ninterface ICards {\r\n    setEstimation: Function,\r\n    estimation: string,\r\n}\r\n\r\nconst Cards: FC<ICards> = ({setEstimation, estimation}) => {\r\n    const styles = useStyles();\r\n\r\n    const handleClick = (item: number | string) => {\r\n        setEstimation(item)\r\n    }\r\n\r\n    const Numbers = useMemo(() => {\r\n        return NUMBERS.map((item: number | string) => {\r\n            return <div key={item} className={`${styles.card} ${estimation === item && styles.cardActive}`}\r\n                        onClick={() => handleClick(item)}>{item === -1 ? '?' : item}</div>\r\n        })\r\n    }, [estimation])\r\n\r\n    return <div className={styles.cardsWrapper}>\r\n        <p className={styles.title}>Choose your card</p>\r\n        {Numbers}\r\n    </div>\r\n}\r\n\r\nexport default Cards;","import React, {FC, useEffect, useState} from \"react\";\nimport Cards from \"./Cards\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getUserNameSelector, getEstimationSelector} from \"../../selectors/userSelectors\";\nimport {ApiWebsocket} from \"../../api/websocketApi\";\nimport {reVoteA, setNumberA} from \"../../Redux/actions/userActions\";\n\nexport interface IVote {\n    name: string,\n}\n\nconst CardsContainer: FC = () => {\n    const userName: string = useSelector(getUserNameSelector)\n    const estimationR: string = useSelector(getEstimationSelector)\n\n    const [estimationLocal, setEstimationLocal] = useState<string>(estimationR)\n    const dispatch = useDispatch();\n\n    const reVote = (data: IVote) => {\n        dispatch(reVoteA(data))\n    }\n\n    const setOwnEstimation = (estimation: string) => {\n        dispatch(setNumberA(estimation))\n    }\n\n    useEffect(() => {\n        if (estimationR === '') {\n            setEstimationLocal('');\n        }\n    }, [estimationR])\n\n    useEffect(() => {\n        if (userName.length && Number.isInteger(estimationLocal)) {\n            const data: IVote = {\n                name: userName,\n            }\n\n            reVote(data);\n            setOwnEstimation(estimationLocal);\n\n            ApiWebsocket.vote(data)\n        }\n    }, [estimationLocal])\n\n    return <Cards setEstimation={setEstimationLocal} estimation={estimationLocal} />\n}\n\nexport default CardsContainer;","import React, {FC} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Skeleton} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: '8px 16px',\r\n        borderRadius: 4,\r\n        backgroundColor: \"#4791db\",\r\n        color: \"#fff\",\r\n        cursor: \"pointer\",\r\n        marginTop: 16,\r\n        transition: '0.2s',\r\n\r\n        '&:hover': {\r\n            backgroundColor: '#1976d2'\r\n        },\r\n\r\n        '&:active': {\r\n            backgroundColor: '#115293'\r\n        }\r\n    },\r\n    buttonDisabled: {\r\n        pointerEvents: 'none',\r\n        opacity: 0.5\r\n    },\r\n    skeleton: {\r\n        transform: 'none',\r\n        marginTop: 16,\r\n    }\r\n});\r\n\r\ninterface IOpenCard {\r\n    sayShowCards: () => void,\r\n    disabledButton: boolean,\r\n    subscribedState: boolean,\r\n}\r\n\r\n\r\nconst OpenCard: FC<IOpenCard> = ({sayShowCards, disabledButton, subscribedState}) => {\r\n    const styles = useStyles();\r\n\r\n    const onClickHandler = () => {\r\n        sayShowCards();\r\n    }\r\n\r\n    return <>\r\n        {subscribedState\r\n            ? <div\r\n                className={`${styles.button} ${disabledButton ? styles.buttonDisabled : ''}`}\r\n                onClick={onClickHandler}\r\n            >\r\n                Show cards\r\n            </div>\r\n            : <Skeleton width={116} height={40} className={styles.skeleton} />\r\n        }\r\n    </>\r\n}\r\n\r\nexport default OpenCard;\r\n","import React, {FC} from \"react\";\r\nimport OpenCard from \"./OpenCardButton\";\r\nimport {ApiWebsocket} from \"../../api/websocketApi\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUserNameSelector, getUsers, getVotedUsersSelector} from \"../../selectors/userSelectors\";\r\nimport {getSubscribedState} from \"../../selectors/boardSelecors\";\r\n\r\nconst OpenCardContainer: FC = () => {\r\n    const userName: string = useSelector(getUserNameSelector)\r\n    const votedUsers: string[] = useSelector(getVotedUsersSelector);\r\n    const colleaguesNames: string[] = useSelector(getUsers);\r\n    const subscribedState: boolean = useSelector(getSubscribedState)\r\n\r\n    const disabledButton = false;// !colleaguesNames.length || votedUsers.length < colleaguesNames.length;\r\n\r\n    const sayShowCards = () => {\r\n        const data = {\r\n            name: userName\r\n        }\r\n\r\n        ApiWebsocket.openCards(data)\r\n    }\r\n\r\n    return <OpenCard sayShowCards={sayShowCards} disabledButton={disabledButton} subscribedState={subscribedState} />\r\n}\r\n\r\nexport default OpenCardContainer;\r\n","import React, {FC} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {newGameA} from \"../../Redux/actions/userActions\";\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: '8px 16px',\r\n        borderRadius: 4,\r\n        backgroundColor: \"#e57373\",\r\n        color: \"#fff\",\r\n        cursor: \"pointer\",\r\n        marginTop: 16,\r\n        transition: '0.2s',\r\n\r\n        '&:hover': {\r\n            backgroundColor: '#f44336'\r\n        },\r\n\r\n        '&:active': {\r\n            backgroundColor: '#d32f2f'\r\n        }\r\n    },\r\n    buttonDisabled: {\r\n        pointerEvents: 'none',\r\n        opacity: 0.5\r\n    },\r\n    skeleton: {\r\n        transform: 'none',\r\n        marginTop: 16,\r\n    }\r\n});\r\n\r\ninterface IClearEstimations {\r\n    clearEstimations: () => void,\r\n}\r\n\r\nconst ClearEstimations: FC<IClearEstimations> = ({clearEstimations}) => {\r\n    const styles = useStyles();\r\n\r\n    const onClickHandler = () => {\r\n        clearEstimations();\r\n    }\r\n\r\n    return <div className={styles.button} onClick={onClickHandler}>Re-vote</div>\r\n}\r\n\r\nexport default ClearEstimations;\r\n","import React, {FC} from \"react\";\r\nimport ClearEstimations from \"./ClearEstimations\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUserNameSelector} from \"../../selectors/userSelectors\";\r\nimport {ApiWebsocket} from \"../../api/websocketApi\";\r\n\r\nconst ClearEstimationsContainer: FC = () => {\r\n    const userName: string = useSelector(getUserNameSelector);\r\n\r\n    const clearEstimations = () => {\r\n        ApiWebsocket.clearEstimations({name: userName})\r\n    };\r\n    return <ClearEstimations clearEstimations={clearEstimations} />\r\n}\r\n\r\nexport default ClearEstimationsContainer;\r\n","import React, {FC} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport InputNameFieldContainer from \"../InputNameField\";\r\nimport PokerTable from \"../PokerTable\";\r\nimport Cards from \"../Cards\";\r\nimport OpenCard from \"../OpenCardButton\";\r\nimport ClearEstimations from \"../ClearEstimations\";\r\n\r\nconst useStyles = makeStyles({\r\n    board: {\r\n        height: '100%',\r\n        padding: 16\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    middle: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 'calc(100vh - 375px)',\r\n        padding: 16\r\n    },\r\n    footer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        flexDirection: \"column\",\r\n    }\r\n});\r\n\r\nconst PokerBoard:FC = () => {\r\n    const styles = useStyles();\r\n\r\n    return <div className={styles.board}>\r\n        <header className={styles.header}>\r\n            <InputNameFieldContainer />\r\n            <div className={styles.buttons}>\r\n                <OpenCard />\r\n                <ClearEstimations />\r\n            </div>\r\n        </header>\r\n        <div className={styles.middle}>\r\n            <PokerTable />\r\n        </div>\r\n        <footer className={styles.footer}>\r\n            <Cards />\r\n        </footer>\r\n    </div>\r\n}\r\n\r\nexport default PokerBoard;","import React, {FC} from \"react\";\r\nimport PokerBoard from \"./PokerBoard\";\r\n\r\nconst PokerBoardContainer:FC = () => {\r\n    return <PokerBoard />\r\n}\r\n\r\nexport default PokerBoardContainer;","export const GET_NAME_STORY = 'GET_NAME_STORY';\r\nexport const SET_SUBSCRIBE_STATE = 'SET_SUBSCRIBE_STATE';","import {INameStory} from \"../../Interfaces\";\r\nimport {GET_NAME_STORY, SET_SUBSCRIBE_STATE} from \"../../Constants/boardConstants\";\r\n\r\nexport const getNameStory = (data: INameStory)  => ({\r\n    type: GET_NAME_STORY,\r\n    payload: data\r\n});\r\n\r\nexport const setSubscribedState = () => ({\r\n    type: SET_SUBSCRIBE_STATE,\r\n    payload: true\r\n});","import * as React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport PokerBoard from \"./Components/PokerBoard\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {subscribe} from \"./Redux/thunkSubscribers\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh'\r\n    },\r\n});\r\n\r\nconst App = () => {\r\n    const styles = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(subscribe())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <PokerBoard />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import {ApiWebsocket} from \"../api/websocketApi\";\r\nimport {INameStory} from \"../Interfaces\";\r\nimport {getNameStory, setSubscribedState} from \"./actions/boardActions\";\r\nimport {newGameA, pushUserNameA, removeUserA, showCardA, votedUserA} from \"./actions/userActions\";\r\n\r\nexport const subscribe = () => async (dispatch: (arg: { type: string; payload?: any; }) => void, getState: any) => {\r\n    ApiWebsocket.onSubscribe(\r\n        getState,\r\n        (data: INameStory) => dispatch(getNameStory(data)),\r\n        () => dispatch(setSubscribedState()),\r\n        (data: any) => dispatch(pushUserNameA(data)),\r\n        (data: any) => dispatch(removeUserA(data)),\r\n        (data: any) => dispatch(votedUserA(data)),\r\n        (data: any) => dispatch(showCardA(data)),\r\n        () => dispatch(newGameA()),\r\n    )\r\n}","import { createMuiTheme } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#f5f5f5',\n    },\n  },\n});\n\nexport default theme;\n","export const GET_MESSAGE = 'GET_MESSAGE';","import {IChatState, IAllMessages, IAddMessageAction} from \"../../Interfaces\";\r\nimport {GET_MESSAGE} from \"../../Constants/ChatConstants\";\r\nimport {chatApi} from \"../../api/chat-api\";\r\nimport {getMessage} from \"../actions/chatActions\";\r\n\r\nconst initialState: IChatState = {\r\n    allMessages: []\r\n}\r\n\r\nexport const chatReducer = (state: IChatState = initialState, action: IAddMessageAction): IChatState => {\r\n    switch (action.type) {\r\n        case GET_MESSAGE:\r\n            return {\r\n                allMessages: [...state.allMessages, action.payload]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const starChatting = () => async (dispatch: (arg: { type: string; payload: IAllMessages; }) => void) => {\r\n    chatApi.onSubscribe((data: IAllMessages) => dispatch(getMessage(data)))\r\n}","import {IBoardState, IGetNameStoryAction, ISubscribedAction} from \"../../Interfaces\";\r\nimport {GET_NAME_STORY, SET_SUBSCRIBE_STATE} from \"../../Constants/boardConstants\";\r\n\r\nconst initialState: IBoardState = {\r\n    title: '',\r\n    subscribed: false,\r\n}\r\n\r\ntype ActionTypes = IGetNameStoryAction | ISubscribedAction;\r\n\r\nexport const boardReducer = (state: IBoardState = initialState, action: ActionTypes): IBoardState => {\r\n    switch (action.type) {\r\n        case GET_NAME_STORY:\r\n            return {\r\n                ...state,\r\n                title: action.payload.title,\r\n            }\r\n        case SET_SUBSCRIBE_STATE:\r\n            return {\r\n                ...state,\r\n                subscribed: !!action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    SET_NAME,\r\n    PUSH_USER_NAME,\r\n    REMOVE_USER,\r\n    VOTED_USER,\r\n    SET_NUMBER,\r\n    SHOW_CARD,\r\n    RE_VOTE,\r\n    NEW_GAME,\r\n} from \"../../Constants/userConstants\";\r\n\r\nexport interface IUserReducer {\r\n    user: IUserState,\r\n}\r\n\r\nexport interface IUserVoted extends IGetName {\r\n}\r\n\r\nexport interface IGetName {\r\n    name: string\r\n}\r\n\r\nexport interface IScores {\r\n    name: string,\r\n    score: number\r\n}\r\n\r\nexport interface IUserState {\r\n    name: string,\r\n    colleagues: string[],\r\n    votedColleagues: string[],\r\n    number: string,\r\n    scores: IScores[],\r\n}\r\n\r\nconst initialState: IUserState = {\r\n    name: '',\r\n    colleagues: [],\r\n    votedColleagues: [],\r\n    number: '',\r\n    scores: []\r\n}\r\n\r\nexport const UserReducer = (state: IUserState = initialState, action: any): IUserState => {\r\n    switch (action.type) {\r\n        case SET_NAME:\r\n            return {\r\n                ...state,\r\n                name: action.payload.name,\r\n            }\r\n        case PUSH_USER_NAME:\r\n            return pushUser(state, action.payload.name)\r\n        case NEW_GAME:\r\n            return {\r\n                ...state,\r\n                number: '',\r\n                scores: [],\r\n                votedColleagues: []\r\n            }\r\n        case REMOVE_USER:\r\n            return {\r\n                ...state,\r\n                colleagues: state.colleagues.filter(colleagues => colleagues.length && colleagues !== action.payload.name)\r\n            }\r\n        case VOTED_USER: {\r\n            return pushVotedUser(state, action.payload.name)\r\n        }\r\n        case SET_NUMBER:\r\n            return {\r\n                ...state,\r\n                number: action.payload,\r\n            }\r\n        case SHOW_CARD:\r\n            return {\r\n                ...state,\r\n                votedColleagues: [],\r\n                number: '',\r\n                scores: pushScores(state.scores, action.payload)\r\n            }\r\n        case RE_VOTE:\r\n            return {\r\n                ...state,\r\n                scores: state.scores.filter(item => item.name !== action.payload.name)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst pushScores = (scores: IScores[], score: any) => {\r\n    const croppedArr = scores.filter(item => item.name !== score.name);\r\n    return [...croppedArr, score]\r\n}\r\n\r\nconst pushUser = (state: any, name: string) => {\r\n    return !state.colleagues.includes(name)\r\n        ? {\r\n            ...state,\r\n            colleagues: [...state.colleagues, name],\r\n        } : state\r\n}\r\n\r\nconst pushVotedUser = (state: any, name: string) => {\r\n    return !state.votedColleagues.includes(name)\r\n        ? {\r\n            ...state,\r\n            scores: state.scores.filter((item: any) => item.name !== name),\r\n            votedColleagues: [...state.votedColleagues, name],\r\n        } : state\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {chatReducer} from './chatReducer';\r\nimport {boardReducer} from './boardReducer';\r\nimport {UserReducer} from './UserReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    chat: chatReducer,\r\n    board: boardReducer,\r\n    user: UserReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport StyledEngineProvider from '@material-ui/core/StyledEngineProvider';\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\nimport App from './App';\r\nimport theme from './theme';\r\nimport {Provider} from 'react-redux';\r\nimport store from '../src/Redux/reducers/rootReducer';\r\n\r\nReactDOM.render(\r\n    <StyledEngineProvider injectFirst>\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </ThemeProvider>\r\n    </StyledEngineProvider>,\r\n    document.querySelector('#root'),\r\n);"],"sourceRoot":""}