{"version":3,"sources":["api/websocketApi.ts","Components/InputNameField/InputNameField.tsx","selectors/boardSelecors.ts","Components/InputNameField/InputNameFieldContainer.tsx","Components/Player/Player.tsx","Components/User/User.tsx","Constants/userConstants.ts","Redux/actions/userActions.ts","Components/User/UserContainer.tsx","Components/Colleagues/Colleagues.tsx","Components/Colleagues/ColleaguesContainer.tsx","Components/PokerTable/PokerTable.tsx","Components/PokerBoard/PokerBoard.tsx","Components/PokerBoard/PokerBoardContainer.tsx","Constants/boardConstants.ts","Redux/actions/boardActions.ts","App.tsx","Redux/thunkSubscribers.ts","theme.tsx","Constants/ChatConstants.ts","Redux/reducers/chatReducer.ts","Redux/reducers/boardReducer.ts","Redux/reducers/UserReducer.ts","Redux/reducers/rootReducer.ts","index.tsx"],"names":["clientStomp","useStyles","makeStyles","container","fontSize","width","skeleton","transform","InputNameField","setNameStory","nameStory","subscribedState","useState","title","setTitle","styles","useEffect","className","TextField","value","label","variant","hiddenLabel","onChange","e","target","onBlur","Skeleton","height","StompJs","webSocketFactory","SockJS","activate","ApiWebsocket","onSubscribe","getState","getNameStory","setSubscribedState","pushUserName","removeUser","onConnect","subscribe","message","JSON","parse","body","userName","name","user","sendUserNameMeToo","sendTaskName","data","publish","destination","stringify","sendUserName","state","board","getSubscribedState","subscribed","InputNameFieldContainer","useSelector","player","display","flexDirection","alignItems","wordBreak","marginRight","marginLeft","alignSelf","paddingTop","backgroundColor","borderRadius","fontWeight","textAlign","lineHeight","minHeight","Player","onDoubleClickHandler","onDoubleClick","inputName","minWidth","maxWidth","marginTop","User","setName","login","setLogin","length","autoFocus","SET_NAME","PUSH_USER_NAME","REMOVE_USER","type","payload","getUserNameSelector","UserContainer","dispatch","useDispatch","Colleagues","getUsers","colleagues","filter","item","ColleaguesContainer","colleaguesNames","console","log","map","position","table","PokerTable","padding","header","middle","justifyContent","footer","PokerBoard","PokerBoardContainer","GET_NAME_STORY","SET_SUBSCRIBE_STATE","root","App","a","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","GET_MESSAGE","initialState","allMessages","pushUser","includes","rootReducer","combineReducers","chat","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.f2dc93d9.chunk.js","sourcesContent":["import SockJS from \"sockjs-client\";\r\nimport * as StompJs from \"@stomp/stompjs\";\r\nimport {IMessage} from \"@stomp/stompjs\";\r\nimport {INameStory} from \"../Interfaces\";\r\nimport {IGetName} from \"../Redux/reducers/UserReducer\";\r\nimport {pushUserName} from \"../Redux/actions/userActions\";\r\n\r\nexport let clientStomp: StompJs.Client;\r\nclientStomp = new StompJs.Client();\r\n// @ts-ignore\r\nclientStomp.webSocketFactory = () => new SockJS('https://poker-api.r2ls.ru/ws');\r\nclientStomp.activate();\r\n\r\nexport const ApiWebsocket: any = {\r\n    onSubscribe: (\r\n        getState: any,\r\n        getNameStory: any,\r\n        setSubscribedState: any,\r\n        pushUserName: any,\r\n        removeUser: any,\r\n    ) => {clientStomp.onConnect = () => {\r\n            setSubscribedState()\r\n            clientStomp.subscribe('/topic/room/topic-changed', (message: IMessage) => {\r\n                getNameStory(JSON.parse(message.body))\r\n            });\r\n            clientStomp.subscribe('/topic/room/im-here', () => {\r\n                const userName = {\r\n                    name: getState().user.name\r\n                };\r\n                // sent other users i am here\r\n                ApiWebsocket.sendUserNameMeToo(userName)\r\n            });\r\n            clientStomp.subscribe('/topic/room/im-here-too', (message: IMessage) => {\r\n                // console.log(`im-here-too ${JSON.parse(message.body).name}`)\r\n                pushUserName(JSON.parse(message.body))\r\n            });\r\n            clientStomp.subscribe('/topic/room/i-left', (message: IMessage) => {\r\n                // console.log(`remove ${JSON.parse(message.body).name}`)\r\n                removeUser(JSON.parse(message.body))\r\n            });\r\n        }\r\n    },\r\n    sendTaskName: (data: INameStory) => {\r\n        clientStomp.publish({destination: '/app/room/topic-changed', body: JSON.stringify(data)});\r\n    },\r\n    sendUserName: (data: IGetName) => {\r\n        // console.log('/app/room/im-here')\r\n        clientStomp.publish({destination: '/app/room/im-here', body: JSON.stringify(data)});\r\n    },\r\n    sendUserNameMeToo: (data: IGetName) => {\r\n        // console.log(`im-here-too SEND ${JSON.stringify(data)}`)\r\n        clientStomp.publish({destination: '/app/room/im-here-too', body: JSON.stringify(data)});\r\n    },\r\n    removeUser: (data: IGetName) => {\r\n        clientStomp.publish({destination: '/app/room/i-left', body: JSON.stringify(data)});\r\n    },\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Paper, Skeleton} from '@material-ui/core';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {INameField} from \"../../Interfaces\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n\r\n        '& .MuiInput-input': {\r\n            fontSize: 28,\r\n            width: 380,\r\n        }\r\n    },\r\n    skeleton: {\r\n        transform: 'none'\r\n    }\r\n});\r\n\r\nconst InputNameField: FC<INameField> = ({setNameStory, nameStory, subscribedState}) => {\r\n    const [title, setTitle] = useState('');\r\n    const styles = useStyles();\r\n\r\n    useEffect(() => {\r\n        setTitle(nameStory)\r\n    }, [nameStory])\r\n\r\n    const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const onBlurHandler = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setNameStory(e.target.value)\r\n    }\r\n\r\n    return <>\r\n        {subscribedState\r\n            ? <div className={styles.container}>\r\n                <TextField\r\n                    value={title}\r\n                    label=\"Name of story\"\r\n                    variant=\"standard\"\r\n                    // InputLabelProps={{shrink: false}}\r\n                    hiddenLabel={true}\r\n                    onChange={onChangeHandler}\r\n                    onBlur={onBlurHandler}\r\n                />\r\n            </div>\r\n            : <Skeleton width={294} height={80} className={styles.skeleton}/>}</>\r\n}\r\n\r\nexport default InputNameField;","// import {createSelector} from \"reselect\";\r\nimport {IBoardTitleState, ISubscribedState} from \"../Interfaces\";\r\n\r\nexport const getNameStory = (state: IBoardTitleState) => state.board.title\r\nexport const getSubscribedState = (state: ISubscribedState) => state.board.subscribed\r\n","import React, {FC} from \"react\";\r\nimport InputNameField from \"./InputNameField\";\r\nimport {ApiWebsocket} from \"../../api/websocketApi\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getNameStory, getSubscribedState} from \"../../selectors/boardSelecors\";\r\nimport {INameStory} from \"../../Interfaces\";\r\n\r\nconst InputNameFieldContainer:FC = () => {\r\n    const nameStory: string = useSelector(getNameStory)\r\n    const subscribedState: boolean = useSelector(getSubscribedState)\r\n\r\n    const setNameStory = (message: string) => {\r\n        const nameStory: INameStory  = {\r\n            title: message,\r\n        }\r\n\r\n        ApiWebsocket.sendTaskName(nameStory)\r\n    }\r\n\r\n    return <InputNameField setNameStory={setNameStory} nameStory={nameStory} subscribedState={subscribedState} />\r\n}\r\n\r\nexport default InputNameFieldContainer;","import React, {FC} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    player: {\r\n        display: 'flex',\r\n        width: 125,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        wordBreak: 'break-word',\r\n        marginRight: -22.5,\r\n        marginLeft: -22.5,\r\n\r\n        '&:nth-child(odd)': {\r\n            alignSelf: 'flex-end',\r\n        },\r\n        '&:nth-child(even)': {\r\n            alignSelf: 'flex-start',\r\n            paddingTop: 5,\r\n        }\r\n    },\r\n    body: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.11)',\r\n        width: 35,\r\n        height: 65,\r\n        borderRadius: 4,\r\n    },\r\n    name: {\r\n        fontSize: 18,\r\n        fontWeight: 600,\r\n        paddingTop: 8,\r\n        textAlign: 'center',\r\n        lineHeight: 1.3,\r\n        minHeight: 54,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nexport interface IPlayer {\r\n    onDoubleClickHandler?: () => void,\r\n    name: string,\r\n}\r\n\r\nconst Player: FC<IPlayer> = ({name, onDoubleClickHandler}) => {\r\n    const styles = useStyles();\r\n\r\n    return <div className={styles.player}>\r\n        <div className={styles.body} />\r\n        <div\r\n            className={styles.name}\r\n            onDoubleClick={onDoubleClickHandler}>\r\n            {name}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Player;\r\n","import React, {FC, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {IUser} from \"./UserContainer\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {ApiWebsocket} from \"../../api/websocketApi\";\r\nimport Player from \"../Player\";\r\n\r\nconst useStyles = makeStyles({\r\n    inputName: {\r\n        minWidth: 70,\r\n        maxWidth: 125,\r\n        marginTop: 12\r\n    }\r\n});\r\n\r\nconst User: FC<IUser> = ({name, setName}) => {\r\n    const [login, setLogin] = useState('');\r\n    const styles = useStyles();\r\n\r\n    const onChangeMessageHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setLogin(e.target.value)\r\n    }\r\n\r\n    const onBlurHandler = () => {\r\n        setName(login)\r\n    }\r\n\r\n    const onDoubleClickHandler = () => {\r\n        if (name.length) {\r\n            ApiWebsocket.removeUser({name: name})\r\n        }\r\n        setLogin(name)\r\n        setName('')\r\n    }\r\n\r\n    return <>\r\n        {name\r\n            ? <Player name={name} onDoubleClickHandler={onDoubleClickHandler}/>\r\n            : <TextField\r\n                className={styles.inputName}\r\n                label=\"Your name\"\r\n                variant=\"standard\"\r\n                value={login}\r\n                onChange={onChangeMessageHandler}\r\n                onBlur={onBlurHandler}\r\n                autoFocus\r\n            />\r\n        }\r\n    </>\r\n}\r\n\r\nexport default User;","export const SET_NAME = 'SET_NAME';\r\nexport const PUSH_USER_NAME = 'PUSH_USER_NAME';\r\nexport const REMOVE_USER = 'REMOVE_USER';","import {IGetName} from \"../reducers/UserReducer\";\r\nimport {SET_NAME, PUSH_USER_NAME, REMOVE_USER} from \"../../Constants/userConstants\";\r\n\r\nexport const setUserName = (data: IGetName)  => ({\r\n    type: SET_NAME,\r\n    payload: data\r\n});\r\n\r\nexport const pushUserName = (data: IGetName)  => ({\r\n    type: PUSH_USER_NAME,\r\n    payload: data\r\n});\r\n\r\nexport const removeUser = (data: IGetName)  => ({\r\n    type: REMOVE_USER,\r\n    payload: data\r\n});","import React, {FC, useEffect, useState} from \"react\";\r\nimport User from \"./User\";\r\nimport {ApiWebsocket} from \"../../api/websocketApi\";\r\nimport {IGetName, IUserReducer} from \"../../Redux/reducers/UserReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setUserName} from \"../../Redux/actions/userActions\";\r\n\r\nexport interface IUser {\r\n    setName: Function,\r\n    name: string,\r\n}\r\n\r\n// DEPT перенести в отдельный файл селекторов\r\nexport const getUserNameSelector = (state: IUserReducer) => state.user.name\r\n\r\nconst UserContainer: FC = () => {\r\n    const userName: string = useSelector(getUserNameSelector)\r\n\r\n    const [name, setName] = useState('')\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setName(userName)\r\n    }, [userName])\r\n\r\n    useEffect(() => {\r\n        if (name.length) {\r\n            const userNameToSend: IGetName = {\r\n                name\r\n            }\r\n            dispatch(setUserName(userNameToSend))\r\n            ApiWebsocket.sendUserName({name: name})\r\n        }\r\n    }, [name])\r\n\r\n    useEffect(() => {\r\n        if (name.length) {\r\n            return () => ApiWebsocket.removeUser({name: name})\r\n        }\r\n    }, [])\r\n\r\n    return <User name={name} setName={setName} />\r\n}\r\n\r\nexport default UserContainer;","import React, {FC} from \"react\";\r\nimport Player from \"../Player\";\r\n\r\nexport interface IColleague {\r\n    name: string,\r\n}\r\n\r\nconst Colleagues:FC<IColleague> = ({name}) => {\r\n    return <Player name={name} />\r\n}\r\n\r\nexport default Colleagues;","import React, {FC, useEffect} from \"react\";\r\nimport Colleagues from \"./Colleagues\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {IUserReducer} from \"../../Redux/reducers/UserReducer\";\r\nimport {getUserNameSelector} from \"../User/UserContainer\";\r\n\r\n// DEPT перенести в отдельный файл селекторов\r\nexport const getUsers = (state: IUserReducer) => state.user.colleagues.filter(item => item.length > 0)\r\n\r\nconst ColleaguesContainer: FC = () => {\r\n    const colleaguesNames: any = useSelector(getUsers);\r\n    const userName: string = useSelector(getUserNameSelector)\r\n\r\n    useEffect(() => {\r\n        console.log(colleaguesNames)\r\n    })\r\n\r\n    return <>\r\n        {colleaguesNames.map((item: string) => {\r\n            return userName !== item && <Colleagues name={item} key={item} />\r\n        })}\r\n    </>\r\n}\r\n\r\nexport default ColleaguesContainer;","import React, {FC} from \"react\";\r\nimport User from \"../User/UserContainer\";\r\nimport Colleagues from \"../Colleagues/ColleaguesContainer\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: \"center\",\r\n        position: 'relative',\r\n        height: 425,\r\n    },\r\n    table: {\r\n        position: 'absolute',\r\n        width: 'calc(100% + 80px)',\r\n        height: 150,\r\n        display: 'block',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.11)',\r\n        borderRadius: 25,\r\n        marginLeft: -40\r\n    }\r\n});\r\n\r\nconst PokerTable:FC = () => {\r\n    const styles = useStyles();\r\n\r\n    return <div className={styles.container}>\r\n        <div className={styles.table}/>\r\n        <User />\r\n        <Colleagues />\r\n    </div>\r\n}\r\n\r\nexport default PokerTable;","import React, {FC} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport InputNameFieldContainer from \"../InputNameField\";\r\nimport PokerTable from \"../PokerTable\";\r\n\r\nconst useStyles = makeStyles({\r\n    board: {\r\n        height: '100%',\r\n        padding: 16\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n    },\r\n    middle: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 'calc(100vh - 137px)',\r\n        padding: 16\r\n    },\r\n    footer: {\r\n\r\n    }\r\n});\r\n\r\nconst PokerBoard:FC = () => {\r\n    const styles = useStyles();\r\n\r\n    return <div className={styles.board}>\r\n        <header className={styles.header}>\r\n            <InputNameFieldContainer />\r\n        </header>\r\n        <div className={styles.middle}>\r\n            <PokerTable />\r\n        </div>\r\n        <footer className={styles.footer}>footer</footer>\r\n    </div>\r\n}\r\n\r\nexport default PokerBoard;","import React, {FC} from \"react\";\r\nimport PokerBoard from \"./PokerBoard\";\r\n\r\nconst PokerBoardContainer:FC = () => {\r\n    return <PokerBoard />\r\n}\r\n\r\nexport default PokerBoardContainer;","export const GET_NAME_STORY = 'GET_NAME_STORY';\r\nexport const SET_SUBSCRIBE_STATE = 'SET_SUBSCRIBE_STATE';","import {INameStory} from \"../../Interfaces\";\r\nimport {GET_NAME_STORY, SET_SUBSCRIBE_STATE} from \"../../Constants/boardConstants\";\r\n\r\nexport const getNameStory = (data: INameStory)  => ({\r\n    type: GET_NAME_STORY,\r\n    payload: data\r\n});\r\n\r\nexport const setSubscribedState = () => ({\r\n    type: SET_SUBSCRIBE_STATE,\r\n    payload: true\r\n});","import * as React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport PokerBoardContainer from \"./Components/PokerBoard\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {subscribe} from \"./Redux/thunkSubscribers\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh'\r\n    },\r\n});\r\n\r\nconst App = () => {\r\n    const styles = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(subscribe())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <PokerBoardContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import {ApiWebsocket} from \"../api/websocketApi\";\r\nimport {INameStory} from \"../Interfaces\";\r\nimport {getNameStory, setSubscribedState} from \"./actions/boardActions\";\r\nimport {pushUserName, removeUser} from \"./actions/userActions\";\r\n\r\nexport const subscribe = () => async (dispatch: (arg: { type: string; payload: any; }) => void, getState: any) => {\r\n    ApiWebsocket.onSubscribe(\r\n        getState,\r\n        (data: INameStory) => dispatch(getNameStory(data)),\r\n        () => dispatch(setSubscribedState()),\r\n        (data: any) => dispatch(pushUserName(data)),\r\n        (data: any) => dispatch(removeUser(data))\r\n    )\r\n}\r\n\r\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#f5f5f5',\n    },\n  },\n});\n\nexport default theme;\n","export const GET_MESSAGE = 'GET_MESSAGE';","import {IChatState, IAllMessages, IAddMessageAction} from \"../../Interfaces\";\r\nimport {GET_MESSAGE} from \"../../Constants/ChatConstants\";\r\nimport {chatApi} from \"../../api/chat-api\";\r\nimport {getMessage} from \"../actions/chatActions\";\r\n\r\nconst initialState: IChatState = {\r\n    allMessages: []\r\n}\r\n\r\nexport const chatReducer = (state: IChatState = initialState, action: IAddMessageAction): IChatState => {\r\n    switch (action.type) {\r\n        case GET_MESSAGE:\r\n            return {\r\n                allMessages: [...state.allMessages, action.payload]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const starChatting = () => async (dispatch: (arg: { type: string; payload: IAllMessages; }) => void) => {\r\n    chatApi.onSubscribe((data: IAllMessages) => dispatch(getMessage(data)))\r\n}","import {IBoardState, IGetNameStoryAction, ISubscribedAction} from \"../../Interfaces\";\r\nimport {GET_NAME_STORY, SET_SUBSCRIBE_STATE} from \"../../Constants/boardConstants\";\r\n\r\nconst initialState: IBoardState = {\r\n    title: '',\r\n    subscribed: false,\r\n}\r\n\r\ntype ActionTypes = IGetNameStoryAction | ISubscribedAction;\r\n\r\nexport const boardReducer = (state: IBoardState = initialState, action: ActionTypes): IBoardState => {\r\n    switch (action.type) {\r\n        case GET_NAME_STORY:\r\n            return {\r\n                ...state,\r\n                title: action.payload.title,\r\n            }\r\n        case SET_SUBSCRIBE_STATE:\r\n            return {\r\n                ...state,\r\n                subscribed: !!action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {SET_NAME, PUSH_USER_NAME, REMOVE_USER} from \"../../Constants/userConstants\";\r\n\r\nexport interface IUserReducer {\r\n    user: IUserState,\r\n}\r\n\r\nexport interface IGetName {\r\n    name: string\r\n}\r\n\r\nexport interface IUserState {\r\n    name: string,\r\n    colleagues: string[],\r\n}\r\n\r\nconst initialState: IUserState = {\r\n    name: '',\r\n    colleagues: [],\r\n}\r\n\r\nexport const UserReducer = (state: IUserState = initialState, action: any): IUserState => {\r\n    switch (action.type) {\r\n        case SET_NAME:\r\n            return {\r\n                ...state,\r\n                name: action.payload.name,\r\n            }\r\n        case PUSH_USER_NAME:\r\n            return pushUser(state, action.payload.name)\r\n        case REMOVE_USER:\r\n            return {\r\n                ...state,\r\n                colleagues: state.colleagues// state.colleagues.filter(colleagues => colleagues.length && colleagues !== action.payload.name)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst pushUser = (state: any, name: string) => {\r\n    return !state.colleagues.includes(name)\r\n        ? {\r\n            ...state,\r\n            colleagues: [...state.colleagues, name],\r\n        } : state\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {chatReducer} from './chatReducer';\r\nimport {boardReducer} from './boardReducer';\r\nimport {UserReducer} from './UserReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    chat: chatReducer,\r\n    board: boardReducer,\r\n    user: UserReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport StyledEngineProvider from '@material-ui/core/StyledEngineProvider';\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\nimport App from './App';\r\nimport theme from './theme';\r\nimport {Provider} from 'react-redux';\r\nimport store from '../src/Redux/reducers/rootReducer';\r\n\r\nReactDOM.render(\r\n    <StyledEngineProvider injectFirst>\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </ThemeProvider>\r\n    </StyledEngineProvider>,\r\n    document.querySelector('#root'),\r\n);"],"sourceRoot":""}