{"version":3,"sources":["Chat/components/InputMessageChat/InputMessageChat.tsx","Chat/components/Message/Message.tsx","Chat/components/MessagesBoard/MessagesBoard.tsx","Chat/Chat.tsx","Chat/ChatContainer.tsx","App.tsx","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","root","display","flexDirection","alignItems","textField","marginTop","marginBottom","nickname","width","nicknameField","marginRight","InputMessageChat","pushMessage","setNickName","nickName","useState","nick","setNick","message","setMessage","styles","className","length","TextField","variant","label","onChange","e","target","value","Button","color","onClick","disabled","fullWidth","multiline","rows","name","fontWeight","paddingRight","text","Message","borderWidth","borderStyle","borderColor","borderRadius","minHeight","maxHeight","padding","overflowY","MessagesBoard","allMessages","map","item","txt","Chat","Paper","Box","p","ChatContainer","setAllMessages","itemMessages","App","Container","maxWidth","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.245c7bbd.chunk.js","sourcesContent":["import React, {FC, useState} from \"react\";\r\nimport {TextField, Grid, Button, Input} from '@material-ui/core';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-end\"\r\n    },\r\n    textField: {\r\n        marginTop: 16,\r\n        marginBottom: 8\r\n    },\r\n    nickname: {\r\n        display: \"flex\",\r\n        alignItems: \"flex-end\",\r\n        width: \"100%\",\r\n        marginTop: 16,\r\n    },\r\n    nicknameField: {\r\n        marginRight: 8,\r\n    }\r\n});\r\n\r\ninterface IInputMessageChat {\r\n    pushMessage: (message: string) => void;\r\n    setNickName: Function,\r\n    nickName: string\r\n}\r\n\r\nconst InputMessageChat: FC<IInputMessageChat> = ({pushMessage, setNickName, nickName}) => {\r\n    const [nick, setNick] = useState<string>('');\r\n    const [message, setMessage] = useState<string>('');\r\n    const styles = useStyles();\r\n\r\n    const onChangeMessageHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setMessage(e.target.value)\r\n    }\r\n\r\n    const onClickSendHandler = () => {\r\n        pushMessage(message);\r\n        setMessage('')\r\n    }\r\n\r\n    const onChangeNickHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setNick(e.target.value)\r\n    }\r\n\r\n    const onClickSaveNickHandler = () => {\r\n        setNickName(nick);\r\n    }\r\n\r\n    return <div className={styles.root}>\r\n        {!nickName.length && <div className={styles.nickname}>\r\n            <TextField\r\n                variant=\"standard\"\r\n                label=\"Write Nickname\"\r\n                className={styles.nicknameField}\r\n                onChange={onChangeNickHandler}\r\n            />\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={onClickSaveNickHandler}\r\n                disabled={(nick.length === 0)}>\r\n                Save\r\n            </Button>\r\n        </div>}\r\n        <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={2}\r\n            className={styles.textField}\r\n            onChange={onChangeMessageHandler}\r\n            value={message}\r\n        />\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={(nickName.length === 0)}\r\n            onClick={onClickSendHandler}>\r\n            Send\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default InputMessageChat;","import React, {FC} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    message: {\r\n        display: \"flex\",\r\n    },\r\n    name: {\r\n        fontWeight: 500,\r\n        paddingRight: 4\r\n    },\r\n    text: {}\r\n});\r\n\r\ninterface IMessage {\r\n    name?: string;\r\n    text: string;\r\n}\r\n\r\nconst Message: FC<IMessage> = ({name = 'George', text}) => {\r\n    const styles = useStyles();\r\n\r\n    return <div className={styles.message}>\r\n        <div className={styles.name}>{`${name}:`}</div>\r\n        <div className={styles.text}>{text}</div>\r\n    </div>\r\n}\r\n\r\nexport default Message;","import React, {FC} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Message from \"../Message\";\r\nimport {IAllMessages} from \"../../ChatContainer\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        borderWidth: 1,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"rgba(0, 0, 0, 0.23)\",\r\n        borderRadius: 4,\r\n        minHeight: 200,\r\n        maxHeight: 200,\r\n        padding: 16,\r\n        overflowY: 'auto',\r\n    },\r\n});\r\n\r\ninterface IMessagesBoard {\r\n    allMessages?: Array<IAllMessages>;\r\n}\r\n\r\nconst MessagesBoard: FC<IMessagesBoard> = ({allMessages}) => {\r\n    const styles = useStyles();\r\n\r\n    return <div className={styles.root}>\r\n        {allMessages && allMessages.map((item) => (\r\n            <Message name={item.name} text={item.txt} />\r\n        ))}\r\n    </div>\r\n}\r\n\r\nexport default MessagesBoard;","import React, {FC} from \"react\";\r\nimport InputMessageChat from \"./components/InputMessageChat\";\r\nimport MessagesBoard from \"./components/MessagesBoard\";\r\nimport {Paper, Box} from '@material-ui/core';\r\nimport {IAllMessages} from \"./ChatContainer\";\r\n\r\ninterface IChat {\r\n    pushMessage: (message: string) => void;\r\n    setNickName: Function,\r\n    nickName: string,\r\n    allMessages: Array<IAllMessages>\r\n}\r\n\r\nconst Chat: FC<IChat> = ({pushMessage, setNickName, nickName, allMessages}) => {\r\n    return <Paper>\r\n        <Box p={2}>\r\n            <MessagesBoard allMessages={allMessages}/>\r\n            <InputMessageChat pushMessage={pushMessage} setNickName={setNickName} nickName={nickName}/>\r\n        </Box>\r\n    </Paper>\r\n}\r\n\r\nexport default Chat;","import React, {useState} from \"react\";\r\nimport Chat from \"./Chat\";\r\n\r\nexport interface IAllMessages {\r\n    name: string;\r\n    txt: string,\r\n}\r\n\r\nconst ChatContainer = () => {\r\n    const [allMessages, setAllMessages] = useState<Array<IAllMessages>>([]);\r\n    const [nickName, setNickName] = useState<string>(\"\")\r\n\r\n    const pushMessage = (message: string) => {\r\n        const itemMessages = {\r\n            name: nickName,\r\n            txt: message\r\n        }\r\n        setAllMessages([...allMessages, itemMessages]);\r\n    }\r\n\r\n    return <Chat pushMessage={pushMessage} setNickName={setNickName} nickName={nickName} allMessages={allMessages}/>\r\n}\r\n\r\nexport default ChatContainer;","import * as React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport Chat from \"./Chat\";\nimport {Box} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {},\n});\n\nconst App = () => {\n    const styles = useStyles();\n\n    return (\n        <Container maxWidth=\"sm\" className={styles.root}>\n            <Box p={2}>\n                <Chat />\n            </Box>\n        </Container>\n    );\n}\n\nexport default App;","import { createMuiTheme } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#f5f5f5',\n    },\n  },\n});\n\nexport default theme;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport StyledEngineProvider from '@material-ui/core/StyledEngineProvider';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  // TODO v5: remove once migration to emotion is completed\n  <StyledEngineProvider injectFirst>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </StyledEngineProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}